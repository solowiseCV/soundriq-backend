generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id            String         @id @default(uuid())
  name          String
  email         String         @unique
  password      String
  createdAt     DateTime       @default(now())
  updatedAt     DateTime       @updatedAt
  artistProfile ArtistProfile?
}

model ArtistProfile {
  id String @id @default(uuid())

  // Personal Information
  artistName  String?
  dateOfBirth String?

  // Media Links
  profilePhoto   String?
  bannerImage    String?
  signatureSound String?

  // Origin and Bio
  countryOfOrigin String?
  bio             String?

  // Music Genre
  musicGenre String?

  // Music Platform Addresses
  appleMusicAddress String?
  spotifyAddress    String?
  soundCloudAddress String?
  youtubeAddress    String?

  // Social Media Addresses
  instagramAddress String?
  tiktokAddress    String?

  // Management
  manager String?

  // Timestamps
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  // Foreign Key
  userId String? @unique
  user   User?  @relation(fields: [userId], references: [id])
  files   File[]

  @@index([artistName])
}

model File {
  id        String      @id @default(uuid())
  filename  String
  path      String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  artist   ArtistProfile @relation(fields: [artistId], references: [userId])
  artistId String
}

model BlacklistedToken {
  id            String   @id @default(uuid())
  token         String
  blacklistedAt DateTime @default(now())
}

model PasswordResetToken {
  id        String   @id @default(uuid())
  token     String
  userId    String
  expiresAt DateTime
  createdAt DateTime @default(now())
}
