{
  "swagger": "2.0",
  "info": {
    "title": "SoundRig's API",
    "version": "1.0.0"
  },
  "securityDefinitions": {
    "BearerAuth": {
      "type": "apiKey",
      "name": "Authorization",
      "in": "header",
      "description": "Enter your bearer token in the format **Bearer &lt;token>**"
    }
  },
  "paths": {
    "/user/register": {
      "post": {
        "summary": "Register a new user",
        "description": "Register a new user with email and name",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "userData",
            "in": "body",
            "description": "User data including email and name",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "email": {
                  "type": "string",
                  "format": "email",
                  "example": "john@example.com"
                },
                "name": {
                  "type": "string",
                  "example": "John Doe"
                },
                "password": {
                  "type": "string",
                  "example": "password123"
                }
              },
              "required": [
                "email",
                "name"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "User registered successfully"
          },
          "400": {
            "description": "Invalid input"
          }
        }
      }
    },
    "/artist/register": {
      "post": {
        "summary": "Register a new artist (use unique email)",
        "description": "Register a new artist with name and genre",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "artistData",
            "in": "body",
            "description": "Artist full name, email, date of birth, and password",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "fullName": {
                  "type": "string",
                  "example": "John Doe"
                },
                "email": {
                  "type": "string",
                  "format": "email",
                  "example": "john@example.com"
                },
                "dateOfBirth": {
                  "type": "string",
                  "format": "date",
                  "example": "1990-01-01"
                },
                "password": {
                  "type": "string",
                  "example": "password123"
                }
              },
              "required": [
                "name",
                "email",
                "dateOfBirth",
                "password"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Artist registered successfully"
          },
          "400": {
            "description": "Invalid input"
          }
        }
      }
    },
    "/user/login": {
      "post": {
        "summary": "Login a user",
        "description": "Login a user with email and password",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "userData",
            "in": "body",
            "description": "User data including email and password",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "email": {
                  "type": "string",
                  "format": "email",
                  "example": "John@example.com"
                },
                "password": {
                  "type": "string",
                  "example": "password123"
                }
              },
              "required": [
                "email",
                "password"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "User logged in successfully"
          },
          "400": {
            "description": "Invalid input"
          }
        }
      }
    },
    "/artist/complete-profile": {
      "post": {
        "summary": "Complete Artist Profile",
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "consumes": [
          "application/json",
          "multipart/form-data"
        ],
        "parameters": [
          {
            "name": "artistData",
            "in": "body",
            "description": "Artist data",
            "schema": {
              "type": "object",
              "properties": {
                "artistName": {
                  "type": "string",
                  "example": "john Doe"
                },
                "countryOfOrigin": {
                  "type": "string",
                  "example": "China"
                },
                "bio": {
                  "type": "string",
                  "example": "kim is the best"
                },
                "musicGenre": {
                  "type": "string",
                  "example": "metal"
                },
                "appleMusicAddress": {
                  "type": "string",
                  "example": "https://example.com/"
                },
                "spotifyAddress": {
                  "type": "string",
                  "example": "https://example.com/"
                },
                "soundCloudAddress": {
                  "type": "string",
                  "example": "https://example.com/"
                },
                "youtubeAddress": {
                  "type": "string",
                  "example": "https://example.com/"
                },
                "instagramAddress": {
                  "type": "string",
                  "example": "https://example.com/"
                },
                "tiktokAddress": {
                  "type": "string",
                  "example": "https://example.com/"
                },
                "manager": {
                  "type": "string",
                  "example": "kim"
                }
              }
            }
          },
          {
            "name": "profilePhoto",
            "in": "formData",
            "description": "Profile picture of the artist",
            "required": false,
            "type": "file"
          },
          {
            "name": "bannerImage",
            "in": "formData",
            "description": "Banner Image of the artist",
            "required": false,
            "type": "file"
          },
          {
            "name": "signatureSound",
            "in": "formData",
            "description": "Signature Sound of the artist",
            "required": false,
            "type": "file"
          }
        ],
        "responses": {
          "200": {
            "description": "Profile completion successful"
          },
          "400": {
            "description": "Invalid input"
          }
        }
      },
      "securityDefinitions": {
        "BearerAuth": {
          "type": "apiKey",
          "name": "Authorization",
          "in": "header",
          "description": "Enter your bearer token in the format **Bearer &lt;token>**"
        }
      }
    },
    "/user": {
      "get": {
        "summary": "Get all users",
        "description": "Retrieve a list of all registered users",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "List of users retrieved successfully",
            "schema": {
              "type": "object",
              "properties": {
                "users": {
                  "type": "array",
                  "items": {}
                }
              }
            }
          },
          "404": {
            "description": "No users found"
          }
        }
      }
    },
    "/user/find/{email}": {
      "get": {
        "summary": "Get user by email",
        "description": "Retrieve a user by their email address",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "email",
            "in": "path",
            "description": "Email address of the user to retrieve",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "User found"
          },
          "404": {
            "description": "User not found"
          }
        }
      }
    },
    "/files/upload": {
      "post": {
        "summary": "Upload a file",
        "description": "Upload a file to the server",
        "consumes": [
          "multipart/form-data"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "file",
            "in": "formData",
            "description": "The file to upload",
            "required": true,
            "type": "file"
          }
        ],
        "responses": {
          "200": {
            "description": "File uploaded successfully"
          },
          "400": {
            "description": "Invalid input"
          }
        }
      }
    },
    "/status": {
      "get": {
        "summary": "Get API status",
        "description": "Check the status of the API",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "API is up and running"
          }
        }
      }
    }
  }
}